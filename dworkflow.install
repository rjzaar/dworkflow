<?php

/**
 * @file
 * Install, update and uninstall functions for the dworkflow module.
 */

use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 */
function dworkflow_install() {
  // Create the resource_locations vocabulary if it doesn't exist
  $vocabulary_id = 'resource_locations';
  $vocabulary = Vocabulary::load($vocabulary_id);
  
  if (!$vocabulary) {
    $vocabulary = Vocabulary::create([
      'vid' => $vocabulary_id,
      'name' => 'Resource Locations',
      'description' => 'Resource locations for workflow assignments (e.g., Google Drive folders, project servers)',
    ]);
    $vocabulary->save();
    
    // Create some example terms
    $example_terms = [
      'Google Drive - Main Folder',
      'Project Server - /projects',
      'SharePoint Site',
      'GitHub Repository',
      'Confluence Space',
    ];
    
    foreach ($example_terms as $term_name) {
      $term = Term::create([
        'vid' => $vocabulary_id,
        'name' => $term_name,
      ]);
      $term->save();
    }
    
    \Drupal::messenger()->addMessage(t('Created "Resource Locations" vocabulary with example terms.'));
  }

  // Set default configuration
  $config = \Drupal::configFactory()->getEditable('dworkflow.settings');
  if ($config->get('resource_vocabulary') === NULL) {
    $config->set('resource_vocabulary', 'resource_locations')->save();
  }
}

/**
 * Implements hook_uninstall().
 */
function dworkflow_uninstall() {
  // Remove workflow field from all content types
  $field_storage = \Drupal::entityTypeManager()
    ->getStorage('field_storage_config')
    ->load('node.field_workflow_list');
  
  if ($field_storage) {
    $field_storage->delete();
  }

  // Note: We don't delete the Resource Locations vocabulary
  // as it may contain user data. The site admin can delete it manually if needed.
  
  \Drupal::messenger()->addMessage(t('DWorkflow has been uninstalled. The Resource Locations vocabulary was preserved and can be deleted manually if no longer needed.'));
}

/**
 * Implements hook_schema().
 */
function dworkflow_schema() {
  // This module uses config entities, so no database schema is needed
  // All data is stored in configuration
  return [];
}
